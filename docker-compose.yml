version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: ankane/pgvector:v0.7.0
    container_name: postgres-ragsystem
    environment:
      POSTGRES_DB: raganything
      POSTGRES_USER: raganything_user
      POSTGRES_PASSWORD: raganything_pass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./RAG-Anything/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raganything_user -d raganything"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rag-network

  # Neo4j 图数据库
  neo4j:
    image: neo4j:5.15-community
    container_name: neo4j-ragsystem
    environment:
      NEO4J_AUTH: neo4j/raganything_neo4j
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*
      NEO4J_dbms_connector_bolt_listen__address: 0.0.0.0:7687
      NEO4J_dbms_connector_http_listen__address: 0.0.0.0:7474
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p raganything_neo4j 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rag-network

  # Redis 缓存 (可选)
  redis:
    image: redis:7-alpine
    container_name: redis-ragsystem
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rag-network

volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_plugins:
    driver: local
  redis_data:
    driver: local

networks:
  rag-network:
    driver: bridge